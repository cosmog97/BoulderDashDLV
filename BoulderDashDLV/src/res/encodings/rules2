%making the guess about of the closest gem
closer(X,Y) | notCloser(X,Y) :- door(X,Y).
closer(X,Y) | notCloser(X,Y) :- gem(X,Y).

%calculating the distance (in absolute value) of the chosen gem
dist(Z) :- player(A,B), closer(C,D), E = A-C, F = B-D, Z = E+F, E>=0, F>=0.
dist(Z) :- player(A,B), closer(C,D), E = C-A, F = B-D, Z = E+F, E>=0, F>=0.
dist(Z) :- player(A,B), closer(C,D), E = A-C, F = D-B, Z = E+F, E>=0, F>=0.
dist(Z) :- player(A,B), closer(C,D), E = C-A, F = D-B, Z = E+F, E>=0, F>=0.

%making sure there is just one gem chosen
:- #count{X,Y:closer(X,Y)} <> 1.
%choosing the best answer set : the one with the closest gem (less distance)
:~ dist(Z). [1@Z]
